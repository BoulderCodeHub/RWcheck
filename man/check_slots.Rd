% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_slots.R
\name{check_slots}
\alias{check_slots}
\title{Checks slots with yaml rules}
\usage{
check_slots(
  scenarios,
  yaml_rule_files,
  scenario_dir,
  output_dir,
  yaml_dir,
  out_fl_nm = "verification_output"
)
}
\arguments{
\item{scenarios}{A character vector of folder names inside the scenario_dir,
which stores the scenario output.}

\item{yaml_rule_files}{A vector of yaml files.}

\item{scenario_dir}{Directory where scenarios are stored.}

\item{output_dir}{Directory where summary and log files are saved.}

\item{yaml_dir}{Directory where yaml files are stored.}

\item{out_fl_nm}{The name of the output files, default to
verification_output.}
}
\value{
Writes passes and fails to summary verification file and outputs
  details to log_file.txt.
}
\description{
`check_slots()` takes RiverWare output (csv or rdf) and uses logic
written in yaml rule(s) to check the RiverWare output for errors.
This function was created to be run within RiverWare using the
Rplugin event with the available predefined arguments.
}
\details{
The function needs the base directory of the scenarios,
which is normally automatically output when running RiverWare models in
RiverSMART. The \code{scenario_dir} contains subdirectories,
each representing an individual scenario. These individual scenario
directories are input to this function as a character vector,
\code{scenarios}. The other directories necessary in this function are the
location of the yaml file(s) \code{yaml_dir}, and desired output
directory, \code{output_dir}.
}
\examples{
scenarios <- c("MRM_Avg,ModelBase,RulesBase,Run-2019-10",
  "MRM_Avg,ModelBase,RulesBase,Run-2019-11")
yaml_rule_files <- c("check_lb_res.yaml", "check_ub_outflow.yaml")
scenario_dir <- "C:/User/Project/Scenario/"
output_dir <- "C:/User/Project/ScenarioSet/allScenarios/basicChecks"
yaml_dir <- "C:/User/Project/Code/"

\dontrun{
check_slots(scenarios, yaml_rule_files, scenario_dir, output_dir, yaml_dir)
}

}
